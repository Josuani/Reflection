// **************************************************************************
// TypeAdapterGenerator
// **************************************************************************

class MisionAdapter extends TypeAdapter<Mision> {
  @override
  final int typeId = 0;

  @override
  Mision read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return Mision(
      id: fields[0] as String,
      titulo: fields[1] as String,
      descripcion: fields[2] as String,
      puntos: fields[3] as int,
    );
  }

  @override
  void write(BinaryWriter writer, Mision obj) {
    writer
      ..writeByte(4)
      ..writeByte(0)
      ..write(obj.id)
      ..writeByte(1)
      ..write(obj.titulo)
      ..writeByte(2)
      ..write(obj.descripcion)
      ..writeByte(3)
      ..write(obj.puntos);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MisionAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class DraftChangeAdapter extends TypeAdapter<DraftChange> {
  @override
  final int typeId = 1;

  @override
  DraftChange read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return DraftChange(
      id: fields[0] as String,
      tipo: fields[1] as String,
      datos: (fields[2] as Map).cast<String, dynamic>(),
      timestamp: fields[3] as DateTime,
    );
  }

  @override
  void write(BinaryWriter writer, DraftChange obj) {
    writer
      ..writeByte(4)
      ..writeByte(0)
      ..write(obj.id)
      ..writeByte(1)
      ..write(obj.tipo)
      ..writeByte(2)
      ..write(obj.datos)
      ..writeByte(3)
      ..write(obj.timestamp);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DraftChangeAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class SettingAdapter extends TypeAdapter<Setting> {
  @override
  final int typeId = 2;

  @override
  Setting read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return Setting(
      key: fields[0] as String,
      tema: fields[1] as String,
      idioma: fields[2] as String,
      filtros: (fields[3] as Map).cast<String, dynamic>(),
    );
  }

  @override
  void write(BinaryWriter writer, Setting obj) {
    writer
      ..writeByte(4)
      ..writeByte(0)
      ..write(obj.key)
      ..writeByte(1)
      ..write(obj.tema)
      ..writeByte(2)
      ..write(obj.idioma)
      ..writeByte(3)
      ..write(obj.filtros);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SettingAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class UIStateAdapter extends TypeAdapter<UIState> {
  @override
  final int typeId = 3;

  @override
  UIState read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return UIState(
      key: fields[0] as String,
      ruta: fields[1] as String,
      estado: (fields[2] as Map).cast<String, dynamic>(),
      ultimaActualizacion: fields[3] as DateTime,
    );
  }

  @override
  void write(BinaryWriter writer, UIState obj) {
    writer
      ..writeByte(4)
      ..writeByte(0)
      ..write(obj.key)
      ..writeByte(1)
      ..write(obj.ruta)
      ..writeByte(2)
      ..write(obj.estado)
      ..writeByte(3)
      ..write(obj.ultimaActualizacion);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is UIStateAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}
